#백준 14712번 넴모넴모 - 백트래킹
'''아이디어- 초기 아이디어'''
#1 백트래킹의 대표격 문제인 N-queen문제와 동일하다.
#2. 각 게임판의 상태를 노드로 생각해서 그래프로 보고 탐색을 한다.
#3. 노드를 탐색할때마다 상태를 확인해서, 주어진 조건에 맞지 않으면 스택에 넣지 않아 다음 탐색에서 제외한다.
#4. 인접노드로 이동할때마다 개수를 센다
#5. 모든 노드에 대한 탐색이 끝나면, 세던 개수를 반환한다.
#(그래프에서 아무것도 놓이지 않으면 0, 넴모가 놓이면 1로 표시한다.)

#===================================================================================
#특이사항 - python 쓰면 통과 못함, pypy 써야됨

import sys

#행 개수, 열개수
n,m = map(int,sys.stdin.readline().split())

# 넴모가 올라갈 격자 판
graph = [[0 for _ in range(m)] for _ in range(n)]


#격자판 탐색 - node 는 넴모를 놓는 위치
def dfs(x,y:list)->int:
    #경우의 수 세기
    count = 0 
    #열이 격자판을 넘어가면 행을 하나 증가
    if y >= m:
        x = x+1
        y = 0
    #행을 증가했는데 격자판을 넘어가면 전부 탐색한 것임 - 탐색 끝
    if x >= n:
        return 0
    
    #넴모를 놓아도 터트릴수 없는 위치지면 놓고 다음 경우 탐색 - 3개중 한칸이라도 0이면 놓을수 있음
    if graph[x][y-1] ==0 or graph[x-1][y-1] == 0 or graph[x-1][y] == 0:
        #넴모를 놓음
        graph[x][y] = 1
        #네모를 놓은 상태에서 재귀를 이용해서 다음 경우 탐색하고, 그 결과에 현재 놓은 결과를 더해서 넣어줌
        count+=dfs(x,y+1)+ 1

        #다음 탐색을 위해서 놓았던 네모를 다시 빈칸으로 돌려놓음
        graph[x][y] = 0

    count += dfs(x,y+1)

    return count

print(dfs(0,0)+1)


